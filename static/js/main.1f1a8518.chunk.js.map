{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovie","a","axious","get","data","setState","this","class","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA8BeA,MA3Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAAK,UCsC7CC,E,4MA/CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,S,sBAAW,8BAAAC,EAAA,sEAKCC,IAAOC,IAAI,0CALZ,gBAGGJ,EAHH,EAEPK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAN1B,2C,kEAUTQ,KAAKN,a,+BAGE,MAEuBM,KAAKT,MAA3BC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OACnB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,YAGH,yBAAKmB,MAAM,UACPR,EAAOR,KAAK,SAAAiB,GAAK,OAClB,kBAAC,EAAD,CACEd,IAAKc,EAAMC,GACXA,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,kB,GAtCVwB,IAAMC,WCAxBC,IAASC,OAOP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1f1a8518.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0,150)+'...'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\nexport default Movie;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axious from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./Movie.css\";\r\n\r\n//App_legacy_200819는 legacy,legacy는 함수형 컴포넌트 -> 클래스형 컴포넌트\r\nclass App extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovie = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axious.get(\"https://yts.mx/api/v2/list_movies.json\");\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n  //이 부분에서 데이터를 가져오고, 이게 끝나면 데이터를 렌더링 한다.\r\n  componentDidMount() {\r\n    this.getMovie();\r\n  }\r\n\r\n  render() {\r\n    //state를 통해 값을 가져온다.\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading</span>\r\n          </div>\r\n        ) : (\r\n         <div class=\"movies\">\r\n           { movies.map( movie => (\r\n            <Movie\r\n              key={movie.id}\r\n              id={movie.id}\r\n              year={movie.year}\r\n              title={movie.title}\r\n              summary={movie.summary}\r\n              poster={movie.medium_cover_image}\r\n              genres={movie.genres}\r\n            />\r\n          ))}\r\n         </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  //strideMode는 문제의 원인이 될수도 있다고 생각하는 component에 감싸주는 것이 좋다.\n  //경고를 띄워주게 된다.\n  //stride 모드로 감싸면 코드의 문제를 감지하고, 경고하기 위해 두번 렌더링 하게 된다.\n\n   //여기서 앱은 컴포넌트, 이 컴포넌트는 App.js에 있다.  html 과 자바스크립트 사이의 이런 조합을 jsx라고 부른다. 리액트에 특화된 개념\n   //쉽게 설명하자면 jsx는 javascript 안의 html이다.\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}